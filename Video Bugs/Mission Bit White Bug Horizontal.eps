%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.1 (Build 13B42) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 478 122
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 478 122
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9496 1.0000 1.0890 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4194 0.2144 0.0081 0.3502 0.7244 0.0935 0.1799 0.0612 0.9873 ] def 
/RangeLMN [ 0.0 0.9496 0.0 1.0000 0.0 1.0890 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
57.905998 109.078 m
21.184 88.101997 l
21 45.824001 l
57.52 24.504 l
94.241997 45.5 l
94.426003 87.777 l
57.905998 109.078 l
h
89.417999 83.098 m
89.417999 47.852001 l
71.039001 37.719002 l
71.039001 63.945 l
57.683998 56.688 l
44.387001 63.780998 l
44.387001 37.719002 l
26.004 47.852001 l
26.004 82.773003 l
57.359001 66.073997 l
57.397999 66.152 l
57.438 66.073997 l
89.417999 83.098 l
h
89.417999 83.098 m
W*
0 0 478 122 rc
16 114.078 m
99.426003 114.078 l
99.426003 19.504 l
16 19.504 l
h
16 114.078 m
f*
Q
q
60.715 111.34 m
77.207001 121.07 l
114.445 100.043 l
114.836 57.289001 l
98.426003 47.605 l
98.023003 90.273003 l
W*
0 0 478 122 rc
55.715 126.07 m
119.836 126.07 l
119.836 42.605 l
55.715 42.605 l
h
55.715 126.07 m
f*
Q
q
54.710999 111.34 m
38.219002 121.07 l
0.98000002 100.043 l
0.58600003 57.289001 l
17 47.605 l
17.402 90.273003 l
W*
0 0 478 122 rc
-4.414 126.07 m
59.710999 126.07 l
59.710999 42.605 l
-4.414 42.605 l
h
-4.414 126.07 m
f*
Q
q
20.652 41.335999 m
20.719 22.188 l
57.824001 0.93000001 l
94.773003 22.445 l
94.707001 41.5 l
57.827999 20.039 l
W*
0 0 478 122 rc
15.652 46.5 m
99.773003 46.5 l
99.773003 -4.0700002 l
15.652 -4.0700002 l
h
15.652 46.5 m
f*
Q
q
170.30499 70.780998 m
170.30499 39.422001 l
163.17999 39.422001 l
163.17999 70.780998 l
146.89799 70.780998 l
146.89799 39.422001 l
139.80499 39.422001 l
139.80499 77.905998 l
146.89799 77.905998 l
146.89799 71.109001 l
146.938 72.046997 147.15199 72.93 147.539 73.765999 c
147.922 74.598 148.43401 75.32 149.07001 75.938004 c
149.715 76.551003 150.461 77.030998 151.30499 77.375 c
152.14799 77.726997 153.047 77.905998 154.008 77.905998 c
163.17999 77.905998 l
164.125 77.905998 165.02299 77.726997 165.867 77.375 c
166.711 77.030998 167.453 76.551003 168.10201 75.938004 c
168.746 75.32 169.26601 74.598 169.664 73.765999 c
170.07001 72.93 170.28101 72.046997 170.30499 71.109001 c
170.355 72.046997 170.562 72.93 170.92999 73.765999 c
171.30499 74.598 171.80901 75.32 172.44501 75.938004 c
173.09 76.551003 173.836 77.030998 174.67999 77.375 c
175.52299 77.726997 176.422 77.905998 177.383 77.905998 c
186.57001 77.905998 l
187.547 77.905998 188.46899 77.719002 189.336 77.344002 c
190.211 76.969002 190.965 76.460999 191.60201 75.828003 c
192.246 75.191002 192.75 74.438004 193.117 73.561996 c
193.492 72.695 193.67999 71.769997 193.67999 70.780998 c
193.67999 39.422001 l
186.57001 39.422001 l
186.57001 70.780998 l
170.30499 70.780998 l
h
202.02299 77.905998 m
209.14799 77.905998 l
209.14799 39.422001 l
202.02299 39.422001 l
202.02299 77.905998 l
h
201.664 92.719002 m
209.508 92.719002 l
209.508 85.311996 l
201.664 85.311996 l
201.664 92.719002 l
h
240.496 46.547001 m
240.496 55.469002 l
223.621 55.469002 l
222.629 55.469002 221.703 55.647999 220.84 56.015999 c
219.97301 56.390999 219.21899 56.895 218.57401 57.530998 c
217.938 58.175999 217.43401 58.93 217.05901 59.797001 c
216.69099 60.672001 216.51199 61.598 216.51199 62.577999 c
216.51199 70.780998 l
216.51199 71.769997 216.69099 72.695 217.05901 73.561996 c
217.43401 74.438004 217.938 75.191002 218.57401 75.828003 c
219.21899 76.460999 219.97301 76.969002 220.84 77.344002 c
221.703 77.719002 222.629 77.905998 223.621 77.905998 c
246.13699 77.905998 l
246.13699 70.780998 l
223.621 70.780998 l
223.621 62.577999 l
240.496 62.577999 l
241.48399 62.577999 242.40601 62.390999 243.26199 62.015999 c
244.11301 61.647999 244.86301 61.145 245.51199 60.5 c
246.168 59.862999 246.68401 59.112999 247.05901 58.25 c
247.43401 57.382999 247.621 56.457001 247.621 55.469002 c
247.621 46.547001 l
247.621 45.555 247.43401 44.625 247.05901 43.75 c
246.68401 42.882999 246.168 42.132999 245.51199 41.5 c
244.86301 40.862999 244.11301 40.359001 243.26199 39.984001 c
242.40601 39.609001 241.48399 39.422001 240.496 39.422001 c
216.51199 39.422001 l
216.51199 46.547001 l
240.496 46.547001 l
h
277.992 46.547001 m
277.992 55.469002 l
261.117 55.469002 l
260.125 55.469002 259.19901 55.647999 258.336 56.015999 c
257.46899 56.390999 256.715 56.895 256.07001 57.530998 c
255.43401 58.175999 254.92999 58.93 254.55499 59.797001 c
254.188 60.672001 254.008 61.598 254.008 62.577999 c
254.008 70.780998 l
254.008 71.769997 254.188 72.695 254.55499 73.561996 c
254.92999 74.438004 255.43401 75.191002 256.07001 75.828003 c
256.715 76.460999 257.46899 76.969002 258.336 77.344002 c
259.19901 77.719002 260.125 77.905998 261.117 77.905998 c
283.633 77.905998 l
283.633 70.780998 l
261.117 70.780998 l
261.117 62.577999 l
277.992 62.577999 l
278.98001 62.577999 279.90201 62.390999 280.758 62.015999 c
281.60901 61.647999 282.35901 61.145 283.008 60.5 c
283.664 59.862999 284.17999 59.112999 284.55499 58.25 c
284.92999 57.382999 285.117 56.457001 285.117 55.469002 c
285.117 46.547001 l
285.117 45.555 284.92999 44.625 284.55499 43.75 c
284.17999 42.882999 283.664 42.132999 283.008 41.5 c
282.35901 40.862999 281.60901 40.359001 280.758 39.984001 c
279.90201 39.609001 278.98001 39.422001 277.992 39.422001 c
254.008 39.422001 l
254.008 46.547001 l
277.992 46.547001 l
h
292.61301 77.905998 m
299.73801 77.905998 l
299.73801 39.422001 l
292.61301 39.422001 l
292.61301 77.905998 l
h
292.254 92.719002 m
300.09799 92.719002 l
300.09799 85.311996 l
292.254 85.311996 l
292.254 92.719002 l
h
341.133 46.547001 m
341.133 45.555 340.94501 44.625 340.57001 43.75 c
340.19501 42.882999 339.68799 42.132999 339.05499 41.5 c
338.418 40.862999 337.672 40.359001 336.82001 39.984001 c
335.965 39.609001 335.043 39.422001 334.05499 39.422001 c
314.94501 39.422001 l
313.97699 39.422001 313.05899 39.609001 312.19501 39.984001 c
311.328 40.359001 310.57401 40.862999 309.92999 41.5 c
309.293 42.132999 308.789 42.882999 308.414 43.75 c
308.039 44.625 307.85199 45.555 307.85199 46.547001 c
307.85199 70.780998 l
307.85199 71.769997 308.039 72.695 308.414 73.561996 c
308.789 74.438004 309.293 75.191002 309.92999 75.828003 c
310.57401 76.460999 311.328 76.969002 312.19501 77.344002 c
313.05899 77.719002 313.97699 77.905998 314.94501 77.905998 c
334.05499 77.905998 l
335.043 77.905998 335.965 77.719002 336.82001 77.344002 c
337.672 76.969002 338.418 76.460999 339.05499 75.828003 c
339.68799 75.191002 340.19501 74.438004 340.57001 73.561996 c
340.94501 72.695 341.133 71.769997 341.133 70.780998 c
341.133 46.547001 l
h
314.94501 46.547001 m
334.05499 46.547001 l
334.05499 70.780998 l
314.94501 70.780998 l
314.94501 46.547001 l
h
383.01599 39.422001 m
375.89099 39.422001 l
375.89099 70.780998 l
356.06201 70.780998 l
356.06201 39.422001 l
348.96899 39.422001 l
348.96899 77.905998 l
356.06201 77.905998 l
356.06201 71.109001 l
356.10199 72.046997 356.31601 72.93 356.703 73.765999 c
357.086 74.598 357.59799 75.32 358.23401 75.938004 c
358.879 76.551003 359.625 77.030998 360.46899 77.375 c
361.31201 77.726997 362.211 77.905998 363.172 77.905998 c
375.89099 77.905998 l
376.879 77.905998 377.80499 77.719002 378.672 77.344002 c
379.535 76.969002 380.285 76.460999 380.922 75.828003 c
381.56601 75.191002 382.078 74.438004 382.453 73.561996 c
382.828 72.695 383.01599 71.769997 383.01599 70.780998 c
383.01599 39.422001 l
h
383.01599 39.422001 m
W*
0 0 478 122 rc
134.80499 97.719002 m
388.01599 97.719002 l
388.01599 34.422001 l
134.80499 34.422001 l
h
134.80499 97.719002 m
f*
Q
q
390.32001 94.164001 m
390.32001 46.566002 l
390.32001 45.425999 390.543 44.332001 390.96899 43.308998 c
390.96899 43.280998 l
391.41 42.289001 392.02301 41.402 392.754 40.640999 c
392.754 40.617001 l
392.78101 40.617001 l
393.539 39.882999 394.42599 39.27 395.422 38.827999 c
395.44501 38.827999 l
396.46899 38.405998 397.55899 38.183998 398.68399 38.183998 c
418.586 38.183998 l
419.72699 38.183998 420.82001 38.402 421.84399 38.827999 c
421.871 38.827999 l
422.867 39.272999 423.742 39.875 424.48401 40.617001 c
425.242 41.375 425.85199 42.280998 426.26999 43.280998 c
426.27301 43.289001 426.26599 43.305 426.26999 43.308998 c
426.72299 44.332001 426.96899 45.425999 426.96899 46.566002 c
426.96899 70.898003 l
426.96899 72.039001 426.72299 73.160004 426.26999 74.183998 c
426.26999 74.191002 426.27301 74.203003 426.26999 74.210999 c
425.85501 75.195 425.258 76.066002 424.51199 76.796997 c
424.496 76.811996 424.5 76.835999 424.48401 76.848 c
424.461 76.823997 l
423.72699 77.57 422.85501 78.167999 421.871 78.582001 c
421.867 78.585999 421.875 78.605003 421.871 78.609001 c
421.86301 78.612999 421.85199 78.605003 421.84399 78.609001 c
420.82001 79.058998 419.72699 79.280998 418.586 79.280998 c
405.82401 79.280998 l
404.711 79.280998 403.63699 79.058998 402.64099 78.637001 c
402.633 78.633003 402.625 78.637001 402.617 78.637001 c
401.64099 78.237999 400.758 77.68 400 76.953003 c
399.97299 76.921997 399.953 76.878998 399.92599 76.848 c
399.92599 94.164001 l
390.32001 94.164001 l
h
433.57001 94.164001 m
432.328 94.164001 l
432.328 84.226997 l
442.67999 84.226997 l
442.67999 94.164001 l
433.57001 94.164001 l
h
455.10199 91.188004 m
455.10199 79.280998 l
445.65601 79.280998 l
445.65601 69.652 l
455.10199 69.652 l
455.10199 46.566002 l
455.10199 45.425999 455.297 44.332001 455.72299 43.308998 c
455.75 43.280998 l
456.19501 42.280998 456.80099 41.375 457.56201 40.617001 c
457.586 40.617001 l
458.34799 39.882999 459.23401 39.27 460.22699 38.827999 c
460.254 38.827999 l
461.27301 38.405998 462.367 38.183998 463.48801 38.183998 c
477.414 38.183998 l
477.414 47.812 l
464.73001 47.812 l
464.73001 69.655998 l
477.414 69.655998 l
477.414 79.280998 l
464.73001 79.280998 l
464.73001 91.188004 l
455.10199 91.188004 l
h
432.69101 38.183998 m
442.31601 38.183998 l
442.31601 79.280998 l
432.69101 79.280998 l
432.69101 38.183998 l
h
399.92599 69.652 m
417.34399 69.652 l
417.34399 47.808998 l
399.92599 47.808998 l
399.92599 69.652 l
h
399.92599 69.652 m
W*
0 0 478 122 rc
385.32001 99.164001 m
482.414 99.164001 l
482.414 33.183998 l
385.32001 33.183998 l
h
385.32001 99.164001 m
f*
ep
end
